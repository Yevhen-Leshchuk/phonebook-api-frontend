{"version":3,"file":"static/js/ContactsPage.e95b28ed.chunk.js","mappings":"kLACA,MAA0B,yBAA1B,EAA2D,uB,SCgB3D,EAdgB,SAAC,GAAyB,IAAvBA,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxB,OACE,qBAASC,UAAWC,EAApB,WACE,eAAID,UAAWC,EAAf,SAAyBH,IACxBC,M,uFCNP,EAA4B,gCCU5B,EARe,WACb,OACE,gBAAKC,UAAWC,EAAhB,UACE,SAAC,KAAD,CAAeC,YAAY,UAAUC,MAAO,GAAIC,OAAQ,QCL9D,EAAuB,0BAAvB,EAAyD,2BAAzD,EAAgG,wDAAhG,EAAgK,2BAAhK,EAAoM,4BAApM,EAA6O,gCAA7O,EAAqR,2BCU/QC,EAAmBC,EAAAA,GAAW,CAClCC,KAAMD,EAAAA,KACHE,IAAI,EAAG,sCACPC,IAAI,GAAI,4CACRC,SAAS,YACZC,MAAOL,EAAAA,KAAaE,IAAI,EAAG,6BAA6BE,SAAS,cAGpD,SAASE,IACtB,IAAQC,GAASC,EAAAA,EAAAA,MAATD,KACR,GAA8CE,EAAAA,EAAAA,MAA9C,eAAOC,EAAP,KAAgCC,EAAhC,KAAqBC,UAEfC,GAAcC,EAAAA,EAAAA,MACdC,GAAgBD,EAAAA,EAAAA,MAmCtB,OACE,+BACE,SAAC,KAAD,CACEE,cAAe,CAAEf,KAAM,GAAII,MAAO,IAClCN,iBAAkBA,EAClBkB,SAAU,SAACC,EAAD,GAA4B,IAAjBC,EAAgB,EAAhBA,WAtCF,SAAAlB,GACvB,IAAMmB,EAAYnB,EAAKoB,cAEvB,cAAOd,QAAP,IAAOA,OAAP,EAAOA,EAAMe,MAAK,SAAAC,GAAO,OAAIA,EAAQtB,KAAKoB,gBAAkBD,KAoClDI,CAAiBN,EAAOjB,OAjCT,SAAAI,GACzB,IAAMoB,EAAcpB,EAEpB,cAAOE,QAAP,IAAOA,OAAP,EAAOA,EAAMe,MAAK,SAAAC,GAAO,OAAIA,EAAQlB,QAAUoB,KAmCrCC,CAAmBR,EAAOb,QAK9BK,EAAWQ,IAtBjBS,EAAAA,EAAAA,SAAQ,CACNC,KAAM,8BACN/B,MAAO,UAsBHsB,MA/BNU,EAAAA,EAAAA,QAAO,CACLD,KAAM,4BACN/B,MAAO,WATTgC,EAAAA,EAAAA,QAAO,CACLD,KAAM,2BACN/B,MAAO,WAoBP,UAmBE,UAAC,KAAD,CAAMH,UAAWC,EAAjB,WACE,kBAAOD,UAAWC,EAAamC,QAASjB,EAAxC,mBAGA,SAAC,KAAD,CACEnB,UAAWC,EACXoC,KAAK,OACL9B,KAAK,OACL+B,YAAY,OACZC,GAAIpB,KAEN,cAAGnB,UAAWC,EAAd,UACE,SAAC,KAAD,CAAcM,KAAK,YAGrB,kBAAOP,UAAWC,EAASmC,QAASf,EAApC,oBAGA,SAAC,KAAD,CACErB,UAAWC,EACXoC,KAAK,MACL9B,KAAK,QACL+B,YAAY,QACZC,GAAIlB,KAEN,cAAGrB,UAAWC,EAAd,UACE,SAAC,KAAD,CAAcM,KAAK,aAErB,oBAAQP,UAAWC,EAAUoC,KAAK,SAASG,SAAUvB,EAArD,WACE,iBAAMjB,UAAWC,EAAjB,yBACCgB,IAAY,SAACwB,EAAD,c,kCC7GzB,EAAuB,8BAAvB,EAAkE,oCAAlE,EAA+G,gCAA/G,EAA4J,oCC0C5J,EAnCyB,SAAC,GAAyB,IAAvBlC,EAAsB,EAAtBA,KAAMI,EAAgB,EAAhBA,MAAO4B,EAAS,EAATA,GACvC,GAAmDG,EAAAA,EAAAA,MAAnD,eAAOC,EAAP,KAAmCC,EAAnC,KAAwB1B,UASxB,OACE,gBAAIlB,UAAWC,EAAf,UACGM,EADH,KACS,iBAAMP,UAAWC,EAAjB,SAAgCU,KACvC,oBACEX,UAAWC,EACXoC,KAAK,SACLQ,QAAS,WACPF,EAAcJ,IAbpBN,EAAAA,EAAAA,SAAQ,CACNC,KAAM,gCACN/B,MAAO,WAcLqC,SAAUI,EAPZ,WASE,iBAAM5C,UAAWC,EAAjB,oBACC2C,IAAc,SAACH,EAAD,SAZSlC,IClBhC,EAAwB,sBAAxB,EAAsD,sBCEvC,SAASuC,EAAT,GAAuC,IAArBC,EAAoB,EAApBA,SAAUC,EAAU,EAAVA,OACzC,OACE,mBAAOhD,UAAWC,EAAlB,mCAEE,kBACED,UAAWC,EACXoC,KAAK,OACLY,MAAOD,EACPV,YAAY,wBACZS,SAAUA,OCXlB,MAAwB,2BCyCxB,EAnCoB,WAClB,OAA6CjC,EAAAA,EAAAA,MAArCD,EAAR,EAAQA,KAAMqC,EAAd,EAAcA,MAAOC,EAArB,EAAqBA,WAAYC,EAAjC,EAAiCA,QACjC,GAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOL,EAAP,KAAeM,EAAf,KAcMC,EAPqB,WACzB,IAAMC,EAAkBR,EAAOrB,cAE/B,cAAOd,QAAP,IAAOA,OAAP,EAAOA,EAAMmC,QAAO,SAAAnB,GAAO,OACzBA,EAAQtB,KAAKoB,cAAc8B,SAASD,MAGvBE,GACXC,EAAkBJ,IAAaL,EAC/BU,EAAoBR,GAA4B,MAAjBF,EAAMW,OAE3C,OACE,iCACE,SAACf,EAAD,CAAQC,SAlBK,SAAAe,GACf,IAAQb,EAAUa,EAAMC,cAAhBd,MACRK,EAAUL,IAgBoBD,OAAQA,KACpC,0BACGG,IAAc,SAAC,IAAD,IACdS,IAAqB,eAAI5D,UAAWC,EAAf,iCACrB0D,GACCJ,EAASS,KAAI,SAAAnC,GAAO,OAClB,SAACoC,GAAD,UAAsCpC,GAAhBA,EAAQU,cClB1C,EAZqB,WACnB,OACE,iCACE,SAAC,EAAD,CAASzC,MAAM,YAAf,UACE,SAACc,EAAD,OAEF,SAAC,EAAD,CAASd,MAAM,WAAf,UACE,SAAC,EAAD","sources":["webpack://phonebook-api-frontend/./src/components/Section/Section.module.css?dbe8","components/Section/Section.js","webpack://phonebook-api-frontend/./src/components/LoaderButton/LoaderButton.module.css?55b0","components/LoaderButton/LoaderButton.js","webpack://phonebook-api-frontend/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.js","webpack://phonebook-api-frontend/./src/components/ContactListItem/ContactListItem.module.css?7127","components/ContactListItem/ContactListItem.js","webpack://phonebook-api-frontend/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.js","webpack://phonebook-api-frontend/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.js","pages/ContactsPage/ContactsPage.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"section\":\"Section_section__Z2PLw\",\"title\":\"Section_title__SLHvV\"};","import PropTypes from 'prop-types';\nimport s from './Section.module.css';\n\nconst Section = ({ title, children }) => {\n  return (\n    <section className={s.section}>\n      <h2 className={s.title}>{title}</h2>\n      {children}\n    </section>\n  );\n};\n\nSection.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.node,\n};\n\nexport default Section;\n","// extracted by mini-css-extract-plugin\nexport default {\"LoaderBox\":\"LoaderButton_LoaderBox__mLRs9\"};","import { RotatingLines } from 'react-loader-spinner';\nimport s from './LoaderButton.module.css';\n\nconst Loader = () => {\n  return (\n    <div className={s.LoaderBox}>\n      <RotatingLines strokeColor=\"#1b1b1c\" width={30} height={30} />\n    </div>\n  );\n};\n\nexport default Loader;\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ContactForm_form__dhl+T\",\"label\":\"ContactForm_label__-cVXI\",\"nameLabel\":\"ContactForm_nameLabel__+PeHB ContactForm_label__-cVXI\",\"input\":\"ContactForm_input__Bl93P\",\"button\":\"ContactForm_button__eSwX9\",\"TextButton\":\"ContactForm_TextButton__CdDdt\",\"error\":\"ContactForm_error__C1smZ\"};","import { Formik, Field, Form, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport { nanoid } from 'nanoid';\nimport { notice, success } from '@pnotify/core/dist/PNotify.js';\nimport '@pnotify/core/dist/PNotify.css';\nimport '@pnotify/core/dist/BrightTheme.css';\nimport { useFetchContactsQuery } from 'redux/contacts/contactsSlice';\nimport { useAddContactMutation } from 'redux/contacts/contactsSlice';\nimport LoaderButton from 'components/LoaderButton';\nimport s from './ContactForm.module.css';\n\nconst validationSchema = Yup.object({\n  name: Yup.string()\n    .min(3, 'must be at least 3 characters long')\n    .max(10, 'must  be no more than 10 characters long')\n    .required('Required'),\n  phone: Yup.string().min(7, 'must be 7 characters long').required('Required'),\n});\n\nexport default function ContactForm() {\n  const { data } = useFetchContactsQuery();\n  const [addContact, { isLoading: isAdding }] = useAddContactMutation();\n\n  const nameInputId = nanoid();\n  const numberInputId = nanoid();\n\n  const checkContactName = name => {\n    const checkName = name.toLowerCase();\n\n    return data?.find(contact => contact.name.toLowerCase() === checkName);\n  };\n\n  const checkContactNumber = phone => {\n    const checkNumber = phone;\n\n    return data?.find(contact => contact.phone === checkNumber);\n  };\n\n  const showMessageSameContactName = () => {\n    notice({\n      text: 'This name already exists',\n      width: '370px',\n    });\n  };\n\n  const showMessageSameContactPhone = () => {\n    notice({\n      text: 'This phone already exists',\n      width: '370px',\n    });\n  };\n\n  const showMessageAddContact = () => {\n    success({\n      text: 'Contact added successfully!',\n      width: '370px',\n    });\n  };\n\n  return (\n    <>\n      <Formik\n        initialValues={{ name: '', phone: '' }}\n        validationSchema={validationSchema}\n        onSubmit={(values, { resetForm }) => {\n          if (checkContactName(values.name)) {\n            showMessageSameContactName();\n            return;\n          }\n\n          if (checkContactNumber(values.phone)) {\n            showMessageSameContactPhone();\n            return;\n          }\n\n          addContact(values);\n          showMessageAddContact();\n          resetForm();\n        }}\n      >\n        <Form className={s.form}>\n          <label className={s.nameLabel} htmlFor={nameInputId}>\n            Name\n          </label>\n          <Field\n            className={s.input}\n            type=\"text\"\n            name=\"name\"\n            placeholder=\"Name\"\n            id={nameInputId}\n          />\n          <p className={s.error}>\n            <ErrorMessage name=\"name\" />\n          </p>\n\n          <label className={s.label} htmlFor={numberInputId}>\n            Phone\n          </label>\n          <Field\n            className={s.input}\n            type=\"tel\"\n            name=\"phone\"\n            placeholder=\"Phone\"\n            id={numberInputId}\n          />\n          <p className={s.error}>\n            <ErrorMessage name=\"phone\" />\n          </p>\n          <button className={s.button} type=\"submit\" disabled={isAdding}>\n            <span className={s.TextButton}>Add contact</span>\n            {isAdding && <LoaderButton />}\n          </button>\n        </Form>\n      </Formik>\n    </>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"ContactListItem_item__UAAix\",\"itemNumber\":\"ContactListItem_itemNumber__2jtdq\",\"button\":\"ContactListItem_button__SG6H2\",\"TextButton\":\"ContactListItem_TextButton__X2oJz\"};","import PropTypes from 'prop-types';\nimport { success } from '@pnotify/core/dist/PNotify.js';\nimport '@pnotify/core/dist/PNotify.css';\nimport '@pnotify/core/dist/BrightTheme.css';\nimport { useDeleteContactMutation } from 'redux/contacts/contactsSlice';\nimport LoaderButton from 'components/LoaderButton';\nimport s from './ContactListItem.module.css';\n\nconst ContactsListItem = ({ name, phone, id }) => {\n  const [deleteContact, { isLoading: isDeleting }] = useDeleteContactMutation();\n\n  const showMessagedeleteContact = () => {\n    success({\n      text: 'Contact successfully removed!',\n      width: '370px',\n    });\n  };\n\n  return (\n    <li className={s.item} key={name}>\n      {name}:<span className={s.itemNumber}>{phone}</span>\n      <button\n        className={s.button}\n        type=\"button\"\n        onClick={() => {\n          deleteContact(id);\n          showMessagedeleteContact();\n        }}\n        disabled={isDeleting}\n      >\n        <span className={s.TextButton}>Delete</span>\n        {isDeleting && <LoaderButton />}\n      </button>\n    </li>\n  );\n};\n\nContactsListItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  phone: PropTypes.string.isRequired,\n};\n\nexport default ContactsListItem;\n","// extracted by mini-css-extract-plugin\nexport default {\"label\":\"Filter_label__vEd1E\",\"input\":\"Filter_input__N7T3z\"};","import React from 'react';\nimport s from './Filter.module.css';\n\nexport default function Filter({ onChange, filter }) {\n  return (\n    <label className={s.label}>\n      Find contacts by name\n      <input\n        className={s.input}\n        type=\"text\"\n        value={filter}\n        placeholder=\"Find contacts by name\"\n        onChange={onChange}\n      />\n    </label>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"error\":\"ContactList_error__uCB2f\"};","import { useState } from 'react';\nimport { useFetchContactsQuery } from 'redux/contacts/contactsSlice';\nimport Loader from 'components/Loader';\nimport ContactListItem from 'components/ContactListItem';\nimport Filter from 'components/Filter';\nimport s from './ContactList.module.css';\n\nconst ContactList = () => {\n  const { data, error, isFetching, isError } = useFetchContactsQuery();\n  const [filter, setFilter] = useState('');\n\n  const onChange = event => {\n    const { value } = event.currentTarget;\n    setFilter(value);\n  };\n\n  const getVisibleContacts = () => {\n    const optimizedFilter = filter.toLowerCase();\n\n    return data?.filter(contact =>\n      contact.name.toLowerCase().includes(optimizedFilter)\n    );\n  };\n  const contacts = getVisibleContacts();\n  const showContactData = contacts && !error;\n  const showNotFoundError = isError && error.status === 404;\n\n  return (\n    <>\n      <Filter onChange={onChange} filter={filter} />\n      <ul>\n        {isFetching && <Loader />}\n        {showNotFoundError && <h1 className={s.error}>Contacts not found!</h1>}\n        {showContactData &&\n          contacts.map(contact => (\n            <ContactListItem key={contact.id} {...contact} />\n          ))}\n      </ul>\n    </>\n  );\n};\n\nexport default ContactList;\n","import Section from 'components/Section';\nimport ContactForm from 'components/ContactForm';\nimport ContactList from 'components/ContactList';\nimport s from './ContactsPage.module.css';\n\nconst ContactsPage = () => {\n  return (\n    <>\n      <Section title=\"Phonebook\">\n        <ContactForm />\n      </Section>\n      <Section title=\"Contacts\">\n        <ContactList />\n      </Section>\n    </>\n  );\n};\nexport default ContactsPage;\n"],"names":["title","children","className","s","strokeColor","width","height","validationSchema","Yup","name","min","max","required","phone","ContactForm","data","useFetchContactsQuery","useAddContactMutation","addContact","isAdding","isLoading","nameInputId","nanoid","numberInputId","initialValues","onSubmit","values","resetForm","checkName","toLowerCase","find","contact","checkContactName","checkNumber","checkContactNumber","success","text","notice","htmlFor","type","placeholder","id","disabled","LoaderButton","useDeleteContactMutation","deleteContact","isDeleting","onClick","Filter","onChange","filter","value","error","isFetching","isError","useState","setFilter","contacts","optimizedFilter","includes","getVisibleContacts","showContactData","showNotFoundError","status","event","currentTarget","map","ContactListItem"],"sourceRoot":""}