{"version":3,"file":"static/js/RegistrationPage.81aa4582.chunk.js","mappings":"uOACA,EAA0B,kCAA1B,EAAmE,+BAAnE,EAA8G,oCAA9G,EAAoK,4EAApK,EAAwP,gCAAxP,EAAoS,kEAApS,EAA8W,gCAA9W,EAAuZ,iCAAvZ,EAAqc,qCAArc,EAAkf,gC,UCK5eA,EAAmBC,EAAAA,GAAW,CAClCC,KAAMD,EAAAA,KACHE,IAAI,EAAG,sCACPC,IAAI,GAAI,4CACRC,SAAS,YACZC,MAAOL,EAAAA,KAAaK,MAAM,yBAAyBD,SAAS,YAC5DE,SAAUN,EAAAA,KACPE,IAAI,EAAG,sCACPC,IAAI,GAAI,4CACRC,SAAS,cAGRG,EAAgB,CACpBN,KAAM,GACNI,MAAO,GACPC,SAAU,IAuFZ,EApFyB,WACvB,OAA4CE,EAAAA,EAAAA,MAA5C,eAAOC,EAAP,KAEMC,GAFN,KAAmBC,WAECC,EAAAA,EAAAA,OACdC,GAAeD,EAAAA,EAAAA,MACfE,GAAkBF,EAAAA,EAAAA,MACxB,OACE,iBAAKG,UAAWC,EAAhB,WACE,gBAAID,UAAWC,EAAf,yBACa,iBAAMD,UAAWC,EAAjB,2BAGb,SAAC,KAAD,CACET,cAAeA,EACfR,iBAAkBA,EAClBkB,SAAU,SAACC,EAAD,GAA4B,IAAjBC,EAAgB,EAAhBA,UACnBC,QAAQC,IAAIH,GAWZT,EAASS,GAETC,KAjBJ,UAoBE,UAAC,KAAD,CAAMJ,UAAWC,EAAQM,YAAU,EAAnC,WACE,kBAAOP,UAAWC,EAAaO,QAASb,EAAxC,mBAGA,SAAC,KAAD,CACEK,UAAWC,EACXQ,KAAK,OACLvB,KAAK,OACLwB,YAAY,OACZC,GAAIhB,KAEN,cAAGK,UAAWC,EAAd,UACE,SAAC,KAAD,CAAcf,KAAK,YAGrB,kBAAOc,UAAWC,EAASO,QAASV,EAApC,oBAGA,SAAC,KAAD,CACEE,UAAWC,EACXQ,KAAK,QACLvB,KAAK,QACLwB,YAAY,OACZC,GAAIb,KAEN,cAAGE,UAAWC,EAAd,UACE,SAAC,KAAD,CAAcf,KAAK,aAGrB,kBAAOc,UAAWC,EAASO,QAAST,EAApC,uBAGA,SAAC,KAAD,CACEC,UAAWC,EACXQ,KAAK,WACLvB,KAAK,WACLwB,YAAY,WACZC,GAAIZ,KAEN,cAAGC,UAAWC,EAAd,UACE,SAAC,KAAD,CAAcf,KAAK,gBAErB,mBAAQc,UAAWC,EAAUQ,KAAK,SAASG,SAAU,KAArD,UACE,iBAAMZ,UAAWC,EAAjB,+BC5FZ,EAJiB,WACf,OAAO,SAAC,EAAD","sources":["webpack://phonebook-api-frontend/./src/components/RegistrationForm/RegistrationForm.module.css?5637","components/RegistrationForm/RegistrationForm.js","pages/RegistrationPage/RegistrationPage.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"formBox\":\"RegistrationForm_formBox__Wqt9b\",\"form\":\"RegistrationForm_form__c8X43\",\"formTitle\":\"RegistrationForm_formTitle__lR10v\",\"formTitleAccent\":\"RegistrationForm_formTitleAccent__5qaI4 RegistrationForm_formTitle__lR10v\",\"label\":\"RegistrationForm_label__zrkEU\",\"nameLabel\":\"RegistrationForm_nameLabel__CWAQ3 RegistrationForm_label__zrkEU\",\"input\":\"RegistrationForm_input__EgGQR\",\"button\":\"RegistrationForm_button__XU1LB\",\"TextButton\":\"RegistrationForm_TextButton__iGaM9\",\"error\":\"RegistrationForm_error__hvKUg\"};","import { Formik, Field, Form, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport { nanoid } from 'nanoid';\nimport { useRegisterMutation } from 'redux/auth/authSlice';\nimport s from './RegistrationForm.module.css';\n\nconst validationSchema = Yup.object({\n  name: Yup.string()\n    .min(3, 'must be at least 3 characters long')\n    .max(10, 'must  be no more than 10 characters long')\n    .required('Required'),\n  email: Yup.string().email('Invalid email address').required('Required'),\n  password: Yup.string()\n    .min(3, 'must be at least 3 characters long')\n    .max(10, 'must  be no more than 10 characters long')\n    .required('Required'),\n});\n\nconst initialValues = {\n  name: '',\n  email: '',\n  password: '',\n};\n\nconst RegistrationForm = () => {\n  const [register, { isLoading: isAdding }] = useRegisterMutation();\n\n  const nameInputId = nanoid();\n  const emailInputId = nanoid();\n  const passwordInputId = nanoid();\n  return (\n    <div className={s.formBox}>\n      <h2 className={s.formTitle}>\n        Sign Up to <span className={s.formTitleAccent}>PHONEBOOK</span>\n      </h2>\n\n      <Formik\n        initialValues={initialValues}\n        validationSchema={validationSchema}\n        onSubmit={(values, { resetForm }) => {\n          console.log(values);\n          // if (checkContactName(values.name)) {\n          //   showMessageSameContactName();\n          //   return;\n          // }\n\n          // if (checkContactNumber(values.phone)) {\n          //   showMessageSameContactPhone();\n          //   return;\n          // }\n\n          register(values);\n          // showMessageAddContact();\n          resetForm();\n        }}\n      >\n        <Form className={s.form} noValidate>\n          <label className={s.nameLabel} htmlFor={nameInputId}>\n            Name\n          </label>\n          <Field\n            className={s.input}\n            type=\"text\"\n            name=\"name\"\n            placeholder=\"Name\"\n            id={nameInputId}\n          />\n          <p className={s.error}>\n            <ErrorMessage name=\"name\" />\n          </p>\n\n          <label className={s.label} htmlFor={emailInputId}>\n            Email\n          </label>\n          <Field\n            className={s.input}\n            type=\"email\"\n            name=\"email\"\n            placeholder=\"Mail\"\n            id={emailInputId}\n          />\n          <p className={s.error}>\n            <ErrorMessage name=\"email\" />\n          </p>\n\n          <label className={s.label} htmlFor={passwordInputId}>\n            Password\n          </label>\n          <Field\n            className={s.input}\n            type=\"password\"\n            name=\"password\"\n            placeholder=\"password\"\n            id={passwordInputId}\n          />\n          <p className={s.error}>\n            <ErrorMessage name=\"password\" />\n          </p>\n          <button className={s.button} type=\"submit\" disabled={null}>\n            <span className={s.TextButton}>Submit</span>\n            {/* {isAdding && <LoaderButton />} */}\n          </button>\n        </Form>\n      </Formik>\n    </div>\n  );\n};\n\nexport default RegistrationForm;\n","import RegistrationForm from 'components/RegistrationForm';\nimport s from './RegistrationPage.module.css';\n\nconst AuthPage = () => {\n  return <RegistrationForm />;\n};\n\nexport default AuthPage;\n"],"names":["validationSchema","Yup","name","min","max","required","email","password","initialValues","useRegisterMutation","register","nameInputId","isLoading","nanoid","emailInputId","passwordInputId","className","s","onSubmit","values","resetForm","console","log","noValidate","htmlFor","type","placeholder","id","disabled"],"sourceRoot":""}