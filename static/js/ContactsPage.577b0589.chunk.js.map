{"version":3,"file":"static/js/ContactsPage.577b0589.chunk.js","mappings":"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","sources":["webpack://phonebook-api-frontend/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.tsx","webpack://phonebook-api-frontend/./src/components/LoaderButton/LoaderButton.module.css?55b0","components/LoaderButton/LoaderButton.tsx","components/Notification/Notification.tsx","components/Section/Section.tsx","../node_modules/react-transition-group/esm/utils/ChildMapping.js","../node_modules/react-transition-group/esm/TransitionGroup.js","webpack://phonebook-api-frontend/./src/components/ContactListItem/ContactListItem.module.css?7127","components/ContactListItem/ContactListItem.tsx","webpack://phonebook-api-frontend/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.tsx","webpack://phonebook-api-frontend/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.tsx","webpack://phonebook-api-frontend/./src/pages/ContactsPage/ContactsPage.module.css?0a45","pages/ContactsPage/ContactsPage.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"contactFormBox\":\"ContactForm_contactFormBox__f55xA\",\"title\":\"ContactForm_title__jZguf\",\"form\":\"ContactForm_form__dhl+T\",\"label\":\"ContactForm_label__-cVXI\",\"nameLabel\":\"ContactForm_nameLabel__+PeHB ContactForm_label__-cVXI\",\"input\":\"ContactForm_input__Bl93P\",\"button\":\"ContactForm_button__eSwX9\",\"textButton\":\"ContactForm_textButton__zEgj3\",\"error\":\"ContactForm_error__C1smZ\"};","import { useNavigate } from 'react-router-dom';\nimport { useEffect } from 'react';\nimport { Formik, Field, Form, ErrorMessage, FormikHelpers } from 'formik';\nimport * as Yup from 'yup';\nimport { nanoid } from 'nanoid';\nimport {\n  useFetchContactsQuery,\n  useAddContactMutation,\n  useUpdateContactMutation,\n} from '../../redux/contacts/contactsSlice';\nimport {\n  showMessageSameContactName,\n  showMessageSameContactPhone,\n  showMessageAddContact,\n  showMessageUpdateContact,\n} from '../../components/Notification/Notification';\nimport LoaderButton from '../LoaderButton';\nimport IInitValues from '../../interfaces/InitValues.intarface';\nimport s from './ContactForm.module.css';\n\nconst validationSchema = Yup.object({\n  name: Yup.string()\n    .min(3, 'must be at least 3 characters long')\n    .max(10, 'must  be no more than 10 characters long')\n    .required('Required'),\n  number: Yup.string()\n    .min(7, 'must be 7 characters long')\n    .max(10, 'must  be no more than 10 characters long')\n    .required('Required'),\n});\n\ninterface Props {\n  id?: string | undefined;\n}\n\nexport default function ContactForm({ id }: Props) {\n  let navigate = useNavigate();\n\n  const { data: contacts } = useFetchContactsQuery();\n\n  const [addContact, { data: addedUser, isLoading: isAdding }] =\n    useAddContactMutation();\n  const [updateContact, { originalArgs }] = useUpdateContactMutation();\n\n  const nameInputId = nanoid();\n  const numberInputId = nanoid();\n\n  useEffect(() => {\n    if (!addedUser) {\n      return;\n    }\n\n    showMessageAddContact();\n  }, [addedUser]);\n\n  useEffect(() => {\n    if (!originalArgs) {\n      return;\n    }\n\n    showMessageUpdateContact();\n  }, [originalArgs]);\n\n  const checkContactName = (name: string) => {\n    const checkName = name.toLowerCase();\n    return contacts?.find(contact => contact.name.toLowerCase() === checkName);\n  };\n\n  const checkContactNumber = (number: string) => {\n    const checkNumber = number;\n\n    return contacts?.find(contact => contact.number === checkNumber);\n  };\n\n  const initialValues = {\n    name: '',\n    number: '',\n  };\n\n  const onSubmit = (\n    values: IInitValues,\n    { resetForm }: FormikHelpers<typeof initialValues>\n  ) => {\n    const update = {\n      ...values,\n      id,\n    };\n\n    if (update.id !== undefined) {\n      updateContact(update);\n      navigate('/contacts');\n      resetForm();\n    } else {\n      if (checkContactName(values.name)) {\n        showMessageSameContactName();\n        return;\n      }\n\n      if (checkContactNumber(values.number)) {\n        showMessageSameContactPhone();\n        return;\n      }\n\n      addContact(values);\n    }\n    resetForm();\n  };\n\n  return (\n    <div className={s.contactFormBox}>\n      <h2 className={s.title}>Phonebook</h2>\n\n      <Formik\n        initialValues={initialValues}\n        validationSchema={validationSchema}\n        onSubmit={onSubmit}\n      >\n        <Form className={s.form}>\n          <label className={s.nameLabel} htmlFor={nameInputId}>\n            Name\n          </label>\n          <Field\n            className={s.input}\n            type=\"text\"\n            name=\"name\"\n            placeholder=\"Name\"\n            id={nameInputId}\n          />\n          <p className={s.error}>\n            <ErrorMessage name=\"name\" />\n          </p>\n          <label className={s.label} htmlFor={numberInputId}>\n            Phone\n          </label>\n\n          <Field\n            className={s.input}\n            type=\"tel\"\n            name=\"number\"\n            placeholder=\"Phone\"\n            id={numberInputId}\n          />\n          <p className={s.error}>\n            <ErrorMessage name=\"number\" />\n          </p>\n          <button className={s.button} type=\"submit\" disabled={isAdding}>\n            <span className={s.textButton}>Save contact</span>\n            {isAdding && <LoaderButton />}\n          </button>\n        </Form>\n      </Formik>\n    </div>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"LoaderBox\":\"LoaderButton_LoaderBox__mLRs9\"};","import PuffLoader from 'react-spinners/PuffLoader';\nimport s from './LoaderButton.module.css';\n\nconst LoaderButton = () => {\n  return (\n    <div className={s.LoaderBox}>\n      <PuffLoader color=\"#52baee\" size={25} />\n    </div>\n  );\n};\nexport default LoaderButton;\n","import { notice, success, error } from '@pnotify/core/dist/PNotify.js';\nimport '@pnotify/core/dist/PNotify.css';\nimport '@pnotify/core/dist/BrightTheme.css';\nimport './notification.css';\n\nexport const showMessageSameContactName = () => {\n  notice({\n    text: 'This name already exists',\n    width: '370px',\n  });\n};\n\nexport const showMessageSameContactPhone = () => {\n  notice({\n    text: 'This phone already exists',\n    width: '370px',\n  });\n};\n\nexport const showMessageAddContact = () => {\n  success({\n    text: 'Contact added successfully!',\n    width: '370px',\n  });\n};\n\nexport const showMessageUpdateContact = () => {\n  success({\n    text: 'Contact successfully updated!',\n    width: '370px',\n  });\n};\n\nexport const showMessageDeleteContact = () => {\n  success({\n    text: 'Contact successfully removed!',\n    width: '370px',\n  });\n};\n\nexport const showMessageWelcomeUser = () => {\n  success({\n    text: 'Welcome to the phonebook!',\n    width: '370px',\n  });\n};\n\nexport const showMessageRegisterUser = () => {\n  success({\n    text: 'You are successfully registered! To enter the phonebook, please sign in.',\n    width: '370px',\n  });\n};\n\nexport const showMessageErrorRegisterUser = () => {\n  error({\n    text: 'This user already exists!',\n    width: '370px',\n  });\n};\n\nexport const showMessageErrorLoginUser = () => {\n  error({\n    text: 'Incorrect email or password!',\n    width: '370px',\n  });\n};\n","interface Props {\n  children: JSX.Element;\n}\n\nconst Section = ({ children }: Props) => {\n  return <section>{children}</section>;\n};\n\nexport default Section;\n","import { Children, cloneElement, isValidElement } from 'react';\n/**\n * Given `this.props.children`, return an object mapping key to child.\n *\n * @param {*} children `this.props.children`\n * @return {object} Mapping of key to child\n */\n\nexport function getChildMapping(children, mapFn) {\n  var mapper = function mapper(child) {\n    return mapFn && isValidElement(child) ? mapFn(child) : child;\n  };\n\n  var result = Object.create(null);\n  if (children) Children.map(children, function (c) {\n    return c;\n  }).forEach(function (child) {\n    // run the map function here instead so that the key is the computed one\n    result[child.key] = mapper(child);\n  });\n  return result;\n}\n/**\n * When you're adding or removing children some may be added or removed in the\n * same render pass. We want to show *both* since we want to simultaneously\n * animate elements in and out. This function takes a previous set of keys\n * and a new set of keys and merges them with its best guess of the correct\n * ordering. In the future we may expose some of the utilities in\n * ReactMultiChild to make this easy, but for now React itself does not\n * directly have this concept of the union of prevChildren and nextChildren\n * so we implement it here.\n *\n * @param {object} prev prev children as returned from\n * `ReactTransitionChildMapping.getChildMapping()`.\n * @param {object} next next children as returned from\n * `ReactTransitionChildMapping.getChildMapping()`.\n * @return {object} a key set that contains all keys in `prev` and all keys\n * in `next` in a reasonable order.\n */\n\nexport function mergeChildMappings(prev, next) {\n  prev = prev || {};\n  next = next || {};\n\n  function getValueForKey(key) {\n    return key in next ? next[key] : prev[key];\n  } // For each key of `next`, the list of keys to insert before that key in\n  // the combined list\n\n\n  var nextKeysPending = Object.create(null);\n  var pendingKeys = [];\n\n  for (var prevKey in prev) {\n    if (prevKey in next) {\n      if (pendingKeys.length) {\n        nextKeysPending[prevKey] = pendingKeys;\n        pendingKeys = [];\n      }\n    } else {\n      pendingKeys.push(prevKey);\n    }\n  }\n\n  var i;\n  var childMapping = {};\n\n  for (var nextKey in next) {\n    if (nextKeysPending[nextKey]) {\n      for (i = 0; i < nextKeysPending[nextKey].length; i++) {\n        var pendingNextKey = nextKeysPending[nextKey][i];\n        childMapping[nextKeysPending[nextKey][i]] = getValueForKey(pendingNextKey);\n      }\n    }\n\n    childMapping[nextKey] = getValueForKey(nextKey);\n  } // Finally, add the keys which didn't appear before any key in `next`\n\n\n  for (i = 0; i < pendingKeys.length; i++) {\n    childMapping[pendingKeys[i]] = getValueForKey(pendingKeys[i]);\n  }\n\n  return childMapping;\n}\n\nfunction getProp(child, prop, props) {\n  return props[prop] != null ? props[prop] : child.props[prop];\n}\n\nexport function getInitialChildMapping(props, onExited) {\n  return getChildMapping(props.children, function (child) {\n    return cloneElement(child, {\n      onExited: onExited.bind(null, child),\n      in: true,\n      appear: getProp(child, 'appear', props),\n      enter: getProp(child, 'enter', props),\n      exit: getProp(child, 'exit', props)\n    });\n  });\n}\nexport function getNextChildMapping(nextProps, prevChildMapping, onExited) {\n  var nextChildMapping = getChildMapping(nextProps.children);\n  var children = mergeChildMappings(prevChildMapping, nextChildMapping);\n  Object.keys(children).forEach(function (key) {\n    var child = children[key];\n    if (!isValidElement(child)) return;\n    var hasPrev = (key in prevChildMapping);\n    var hasNext = (key in nextChildMapping);\n    var prevChild = prevChildMapping[key];\n    var isLeaving = isValidElement(prevChild) && !prevChild.props.in; // item is new (entering)\n\n    if (hasNext && (!hasPrev || isLeaving)) {\n      // console.log('entering', key)\n      children[key] = cloneElement(child, {\n        onExited: onExited.bind(null, child),\n        in: true,\n        exit: getProp(child, 'exit', nextProps),\n        enter: getProp(child, 'enter', nextProps)\n      });\n    } else if (!hasNext && hasPrev && !isLeaving) {\n      // item is old (exiting)\n      // console.log('leaving', key)\n      children[key] = cloneElement(child, {\n        in: false\n      });\n    } else if (hasNext && hasPrev && isValidElement(prevChild)) {\n      // item hasn't changed transition states\n      // copy over the last transition props;\n      // console.log('unchanged', key)\n      children[key] = cloneElement(child, {\n        onExited: onExited.bind(null, child),\n        in: prevChild.props.in,\n        exit: getProp(child, 'exit', nextProps),\n        enter: getProp(child, 'enter', nextProps)\n      });\n    }\n  });\n  return children;\n}","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport TransitionGroupContext from './TransitionGroupContext';\nimport { getChildMapping, getInitialChildMapping, getNextChildMapping } from './utils/ChildMapping';\n\nvar values = Object.values || function (obj) {\n  return Object.keys(obj).map(function (k) {\n    return obj[k];\n  });\n};\n\nvar defaultProps = {\n  component: 'div',\n  childFactory: function childFactory(child) {\n    return child;\n  }\n};\n/**\n * The `<TransitionGroup>` component manages a set of transition components\n * (`<Transition>` and `<CSSTransition>`) in a list. Like with the transition\n * components, `<TransitionGroup>` is a state machine for managing the mounting\n * and unmounting of components over time.\n *\n * Consider the example below. As items are removed or added to the TodoList the\n * `in` prop is toggled automatically by the `<TransitionGroup>`.\n *\n * Note that `<TransitionGroup>`  does not define any animation behavior!\n * Exactly _how_ a list item animates is up to the individual transition\n * component. This means you can mix and match animations across different list\n * items.\n */\n\nvar TransitionGroup = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(TransitionGroup, _React$Component);\n\n  function TransitionGroup(props, context) {\n    var _this;\n\n    _this = _React$Component.call(this, props, context) || this;\n\n    var handleExited = _this.handleExited.bind(_assertThisInitialized(_this)); // Initial children should all be entering, dependent on appear\n\n\n    _this.state = {\n      contextValue: {\n        isMounting: true\n      },\n      handleExited: handleExited,\n      firstRender: true\n    };\n    return _this;\n  }\n\n  var _proto = TransitionGroup.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    this.mounted = true;\n    this.setState({\n      contextValue: {\n        isMounting: false\n      }\n    });\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    this.mounted = false;\n  };\n\n  TransitionGroup.getDerivedStateFromProps = function getDerivedStateFromProps(nextProps, _ref) {\n    var prevChildMapping = _ref.children,\n        handleExited = _ref.handleExited,\n        firstRender = _ref.firstRender;\n    return {\n      children: firstRender ? getInitialChildMapping(nextProps, handleExited) : getNextChildMapping(nextProps, prevChildMapping, handleExited),\n      firstRender: false\n    };\n  } // node is `undefined` when user provided `nodeRef` prop\n  ;\n\n  _proto.handleExited = function handleExited(child, node) {\n    var currentChildMapping = getChildMapping(this.props.children);\n    if (child.key in currentChildMapping) return;\n\n    if (child.props.onExited) {\n      child.props.onExited(node);\n    }\n\n    if (this.mounted) {\n      this.setState(function (state) {\n        var children = _extends({}, state.children);\n\n        delete children[child.key];\n        return {\n          children: children\n        };\n      });\n    }\n  };\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        Component = _this$props.component,\n        childFactory = _this$props.childFactory,\n        props = _objectWithoutPropertiesLoose(_this$props, [\"component\", \"childFactory\"]);\n\n    var contextValue = this.state.contextValue;\n    var children = values(this.state.children).map(childFactory);\n    delete props.appear;\n    delete props.enter;\n    delete props.exit;\n\n    if (Component === null) {\n      return /*#__PURE__*/React.createElement(TransitionGroupContext.Provider, {\n        value: contextValue\n      }, children);\n    }\n\n    return /*#__PURE__*/React.createElement(TransitionGroupContext.Provider, {\n      value: contextValue\n    }, /*#__PURE__*/React.createElement(Component, props, children));\n  };\n\n  return TransitionGroup;\n}(React.Component);\n\nTransitionGroup.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /**\n   * `<TransitionGroup>` renders a `<div>` by default. You can change this\n   * behavior by providing a `component` prop.\n   * If you use React v16+ and would like to avoid a wrapping `<div>` element\n   * you can pass in `component={null}`. This is useful if the wrapping div\n   * borks your css styles.\n   */\n  component: PropTypes.any,\n\n  /**\n   * A set of `<Transition>` components, that are toggled `in` and out as they\n   * leave. the `<TransitionGroup>` will inject specific transition props, so\n   * remember to spread them through if you are wrapping the `<Transition>` as\n   * with our `<Fade>` example.\n   *\n   * While this component is meant for multiple `Transition` or `CSSTransition`\n   * children, sometimes you may want to have a single transition child with\n   * content that you want to be transitioned out and in when you change it\n   * (e.g. routes, images etc.) In that case you can change the `key` prop of\n   * the transition child as you change its content, this will cause\n   * `TransitionGroup` to transition the child out and back in.\n   */\n  children: PropTypes.node,\n\n  /**\n   * A convenience prop that enables or disables appear animations\n   * for all children. Note that specifying this will override any defaults set\n   * on individual children Transitions.\n   */\n  appear: PropTypes.bool,\n\n  /**\n   * A convenience prop that enables or disables enter animations\n   * for all children. Note that specifying this will override any defaults set\n   * on individual children Transitions.\n   */\n  enter: PropTypes.bool,\n\n  /**\n   * A convenience prop that enables or disables exit animations\n   * for all children. Note that specifying this will override any defaults set\n   * on individual children Transitions.\n   */\n  exit: PropTypes.bool,\n\n  /**\n   * You may need to apply reactive updates to a child as it is exiting.\n   * This is generally done by using `cloneElement` however in the case of an exiting\n   * child the element has already been removed and not accessible to the consumer.\n   *\n   * If you do need to update a child as it leaves you can provide a `childFactory`\n   * to wrap every child, even the ones that are leaving.\n   *\n   * @type Function(child: ReactElement) -> ReactElement\n   */\n  childFactory: PropTypes.func\n} : {};\nTransitionGroup.defaultProps = defaultProps;\nexport default TransitionGroup;","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"ContactListItem_item__UAAix\",\"itemName\":\"ContactListItem_itemName__J6Aq+\",\"itemNumber\":\"ContactListItem_itemNumber__2jtdq ContactListItem_itemName__J6Aq+\",\"titleName\":\"ContactListItem_titleName__nU89I ContactListItem_itemName__J6Aq+\",\"titleNumber\":\"ContactListItem_titleNumber__-+Vht ContactListItem_itemName__J6Aq+\",\"contactsListItemButtonBox\":\"ContactListItem_contactsListItemButtonBox__lcVD6\",\"button\":\"ContactListItem_button__SG6H2\",\"buttonEdit\":\"ContactListItem_buttonEdit__aD2No ContactListItem_button__SG6H2\",\"textButton\":\"ContactListItem_textButton__giSzf\"};","import { useNavigate } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { useDeleteContactMutation } from '../../redux/contacts/contactsSlice';\nimport { updateContact } from '../../redux/contacts/updateContactReducer';\nimport { showMessageDeleteContact } from '../Notification/Notification';\nimport LoaderButton from '../LoaderButton';\nimport s from './ContactListItem.module.css';\n\ninterface Props {\n  name: string;\n  number: string;\n  id: string;\n}\n\nconst ContactsListItem = ({ name, number, id }: Props) => {\n  let navigate = useNavigate();\n\n  const [deleteContact, { isLoading: isDeleting }] = useDeleteContactMutation();\n  const dispatch = useDispatch();\n\n  return (\n    <li className={s.item} key={name}>\n      <div>\n        <p className={s.titleName}> Name:</p>\n        <p className={s.titleNumber}>Number:</p>\n      </div>\n      <div>\n        <p className={s.itemName}> {name}</p>\n        <p className={s.itemNumber}>{number}</p>\n      </div>\n\n      <div className={s.contactsListItemButtonBox}>\n        <button\n          className={s.button}\n          type=\"button\"\n          onClick={() => {\n            deleteContact(id);\n            showMessageDeleteContact();\n          }}\n          disabled={isDeleting}\n        >\n          <span className={s.textButton}>Delete</span>\n          {isDeleting && <LoaderButton />}\n        </button>\n        <button\n          className={s.buttonEdit}\n          type=\"button\"\n          onClick={() => {\n            dispatch(updateContact(id));\n            navigate('/contacts-update');\n          }}\n        >\n          <span className={s.textButton}>Edit</span>\n        </button>\n      </div>\n    </li>\n  );\n};\n\nexport default ContactsListItem;\n","// extracted by mini-css-extract-plugin\nexport default {\"label\":\"Filter_label__vEd1E\",\"input\":\"Filter_input__N7T3z\"};","import s from './Filter.module.css';\n\ninterface Props {\n  filter: string;\n  onChange: (filter: string) => void;\n}\n\nexport default function Filter({ onChange, filter }: Props) {\n  return (\n    <label className={s.label}>\n      Find contacts by name\n      <input\n        className={s.input}\n        type=\"text\"\n        value={filter}\n        placeholder=\"Find contacts by name\"\n        onChange={event => onChange(event.target.value)}\n      />\n    </label>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"contactsListBox\":\"ContactList_contactsListBox__RlsXq\",\"plugImageBox\":\"ContactList_plugImageBox__iju9E\",\"plugImage\":\"ContactList_plugImage__ZZyjO\",\"title\":\"ContactList_title__gpugJ\",\"contactsBox\":\"ContactList_contactsBox__H9Ugp\",\"error\":\"ContactList_error__uCB2f\",\"enter\":\"ContactList_enter__W2-k3\",\"enterActive\":\"ContactList_enterActive__BAXcF\",\"exit\":\"ContactList_exit__8mjAp\",\"exitActive\":\"ContactList_exitActive__dq1T7\"};","import { useState } from 'react';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport { useFetchContactsQuery } from '../../redux/contacts/contactsSlice';\nimport LoaderButton from '../LoaderButton';\nimport ContactListItem from '../ContactListItem';\nimport Filter from '../Filter';\nimport plug from '../../images/error.png';\nimport s from './ContactList.module.css';\n\nconst ContactList = () => {\n  const [filter, setFilter] = useState('');\n\n  const { data: userContacts, isFetching } = useFetchContactsQuery();\n\n  const onChange = (filter: string) => {\n    setFilter(filter);\n  };\n\n  const getVisibleContacts = () => {\n    const optimizedFilter = filter.toLowerCase();\n\n    return userContacts?.filter(contact =>\n      contact.name.toLowerCase().includes(optimizedFilter)\n    );\n  };\n  const contacts = getVisibleContacts();\n  const showNotFoundContacts = contacts?.length === 0;\n\n  return (\n    <>\n      <div className={s.contactsListBox}>\n        <h2 className={s.title}>Contacts</h2>\n\n        <Filter onChange={onChange} filter={filter} />\n        {isFetching && <LoaderButton />}\n        {showNotFoundContacts && (\n          <div className={s.plugImageBox}>\n            <h1 className={s.error}>Contacts not found!</h1>\n            <img className={s.plugImage} src={plug} alt=\"Movies not found\" />\n          </div>\n        )}\n\n        <TransitionGroup component=\"ul\" className={s.contactsBox}>\n          {contacts &&\n            contacts.map(contact => (\n              <CSSTransition key={contact.id} timeout={500} classNames={s}>\n                <ContactListItem {...contact} id={contact.id} />\n              </CSSTransition>\n            ))}\n        </TransitionGroup>\n      </div>\n    </>\n  );\n};\n\nexport default ContactList;\n","// extracted by mini-css-extract-plugin\nexport default {\"contactsBox\":\"ContactsPage_contactsBox__fFIei\"};","import Section from '../../components/Section';\nimport ContactForm from '../../components/ContactForm';\nimport ContactList from '../../components/ContactList';\nimport s from './ContactsPage.module.css';\n\nconst ContactsPage = () => {\n  return (\n    <div className={s.contactsBox}>\n      <Section>\n        <ContactForm />\n      </Section>\n      <Section>\n        <ContactList />\n      </Section>\n    </div>\n  );\n};\nexport default ContactsPage;\n"],"names":["validationSchema","Yup","name","min","max","required","number","ContactForm","id","navigate","useNavigate","contacts","useFetchContactsQuery","data","useAddContactMutation","addContact","addedUser","isAdding","isLoading","useUpdateContactMutation","updateContact","originalArgs","nameInputId","nanoid","numberInputId","useEffect","showMessageAddContact","showMessageUpdateContact","className","s","initialValues","onSubmit","values","resetForm","update","undefined","checkName","toLowerCase","find","contact","checkContactName","showMessageSameContactName","checkNumber","checkContactNumber","showMessageSameContactPhone","htmlFor","type","placeholder","disabled","LoaderButton","color","size","notice","text","width","success","showMessageDeleteContact","showMessageWelcomeUser","showMessageRegisterUser","showMessageErrorRegisterUser","error","showMessageErrorLoginUser","children","getChildMapping","mapFn","result","Object","create","Children","c","forEach","child","key","isValidElement","mapper","getProp","prop","props","getNextChildMapping","nextProps","prevChildMapping","onExited","nextChildMapping","prev","next","getValueForKey","i","nextKeysPending","pendingKeys","prevKey","length","push","childMapping","nextKey","pendingNextKey","mergeChildMappings","keys","hasPrev","hasNext","prevChild","isLeaving","in","cloneElement","bind","exit","enter","obj","map","k","TransitionGroup","_React$Component","context","_this","handleExited","call","this","_assertThisInitialized","state","contextValue","isMounting","firstRender","_inheritsLoose","_proto","prototype","componentDidMount","mounted","setState","componentWillUnmount","getDerivedStateFromProps","_ref","appear","node","currentChildMapping","_extends","render","_this$props","Component","component","childFactory","_objectWithoutPropertiesLoose","React","TransitionGroupContext","value","propTypes","defaultProps","useDeleteContactMutation","deleteContact","isDeleting","dispatch","useDispatch","onClick","Filter","onChange","filter","event","target","useState","setFilter","userContacts","isFetching","optimizedFilter","includes","getVisibleContacts","showNotFoundContacts","src","plug","alt","CSSTransition","timeout","classNames","ContactListItem","Section"],"sourceRoot":""}