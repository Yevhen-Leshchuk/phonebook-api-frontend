{"version":3,"file":"static/js/ContactsPage.21878a71.chunk.js","mappings":"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","sources":["webpack://phonebook-api-frontend/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.js","components/LoaderButton/LoaderButton.js","components/Notification/Notification.js","components/Section/Section.js","webpack://phonebook-api-frontend/./src/components/ContactListItem/ContactListItem.module.css?7127","components/ContactListItem/ContactListItem.js","webpack://phonebook-api-frontend/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.js","webpack://phonebook-api-frontend/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.js","webpack://phonebook-api-frontend/./src/pages/ContactsPage/ContactsPage.module.css?0a45","pages/ContactsPage/ContactsPage.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"contactFormBox\":\"ContactForm_contactFormBox__f55xA\",\"title\":\"ContactForm_title__jZguf\",\"form\":\"ContactForm_form__dhl+T\",\"label\":\"ContactForm_label__-cVXI\",\"nameLabel\":\"ContactForm_nameLabel__+PeHB ContactForm_label__-cVXI\",\"input\":\"ContactForm_input__Bl93P\",\"button\":\"ContactForm_button__eSwX9\",\"textButton\":\"ContactForm_textButton__zEgj3\",\"error\":\"ContactForm_error__C1smZ\"};","import { useNavigate } from 'react-router-dom';\nimport { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Formik, Field, Form, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport { nanoid } from 'nanoid';\nimport {\n  useFetchContactsQuery,\n  useAddContactMutation,\n  useUpdateContactMutation,\n} from 'redux/contacts/contactsSlice';\nimport {\n  showMessageSameContactName,\n  showMessageSameContactPhone,\n  showMessageAddContact,\n  showMessageUpdateContact,\n} from 'components/Notification/Notification';\nimport LoaderButton from 'components/LoaderButton';\nimport s from './ContactForm.module.css';\n\nconst validationSchema = Yup.object({\n  name: Yup.string()\n    .min(3, 'must be at least 3 characters long')\n    .max(10, 'must  be no more than 10 characters long')\n    .required('Required'),\n  number: Yup.string()\n    .min(7, 'must be 7 characters long')\n    .max(10, 'must  be no more than 10 characters long')\n    .required('Required'),\n});\n\nexport default function ContactForm({ id }) {\n  let navigate = useNavigate();\n\n  const { data } = useFetchContactsQuery();\n  const [addContact, { data: addedUser, isLoading: isAdding }] =\n    useAddContactMutation();\n  const [updateContact, { originalArgs }] = useUpdateContactMutation();\n\n  const nameInputId = nanoid();\n  const numberInputId = nanoid();\n\n  useEffect(() => {\n    if (!addedUser) {\n      return;\n    }\n\n    showMessageAddContact();\n  }, [addedUser]);\n\n  useEffect(() => {\n    if (!originalArgs) {\n      return;\n    }\n\n    showMessageUpdateContact();\n  }, [originalArgs]);\n\n  const checkContactName = name => {\n    const checkName = name.toLowerCase();\n\n    return data?.find(contact => contact.name.toLowerCase() === checkName);\n  };\n\n  const checkContactNumber = number => {\n    const checkNumber = number;\n\n    return data?.find(contact => contact.number === checkNumber);\n  };\n\n  const initialValues = {\n    name: '',\n    number: '',\n  };\n\n  const onSubmit = (values, { resetForm }) => {\n    const update = {\n      ...values,\n      id,\n    };\n\n    if (update.id !== undefined) {\n      updateContact(update);\n      navigate('/contacts');\n      resetForm();\n    } else {\n      if (checkContactName(values.name)) {\n        showMessageSameContactName();\n        return;\n      }\n\n      if (checkContactNumber(values.number)) {\n        showMessageSameContactPhone();\n        return;\n      }\n\n      addContact(values);\n    }\n    resetForm();\n  };\n\n  return (\n    <div className={s.contactFormBox}>\n      <h2 className={s.title}>Phonebook</h2>\n\n      <Formik\n        initialValues={initialValues}\n        validationSchema={validationSchema}\n        onSubmit={onSubmit}\n      >\n        <Form className={s.form}>\n          <label className={s.nameLabel} htmlFor={nameInputId}>\n            Name\n          </label>\n          <Field\n            className={s.input}\n            type=\"text\"\n            name=\"name\"\n            placeholder=\"Name\"\n            id={nameInputId}\n          />\n          <p className={s.error}>\n            <ErrorMessage name=\"name\" />\n          </p>\n          <label className={s.label} htmlFor={numberInputId}>\n            Phone\n          </label>\n\n          <Field\n            className={s.input}\n            type=\"tel\"\n            name=\"number\"\n            placeholder=\"Phone\"\n            id={numberInputId}\n          />\n          <p className={s.error}>\n            <ErrorMessage name=\"number\" />\n          </p>\n          <button className={s.button} type=\"submit\" disabled={isAdding}>\n            <span className={s.textButton}>Save contact</span>\n            {isAdding && <LoaderButton />}\n          </button>\n        </Form>\n      </Formik>\n    </div>\n  );\n}\n\nContactForm.propTypes = {\n  id: PropTypes.string,\n};\n","import { RotatingLines } from 'react-loader-spinner';\n\nconst Loader = () => {\n  return (\n    <div>\n      <RotatingLines strokeColor=\"#204454\" width={30} height={30} />\n    </div>\n  );\n};\n\nexport default Loader;\n","import { notice, success, error } from '@pnotify/core/dist/PNotify.js';\nimport '@pnotify/core/dist/PNotify.css';\nimport '@pnotify/core/dist/BrightTheme.css';\n\nexport const showMessageSameContactName = () => {\n  notice({\n    text: 'This name already exists',\n    width: '370px',\n  });\n};\n\nexport const showMessageSameContactPhone = () => {\n  notice({\n    text: 'This phone already exists',\n    width: '370px',\n  });\n};\n\nexport const showMessageAddContact = () => {\n  success({\n    text: 'Contact added successfully!',\n    width: '370px',\n  });\n};\n\nexport const showMessageUpdateContact = () => {\n  success({\n    text: 'Contact successfully updated!',\n    width: '370px',\n  });\n};\n\nexport const showMessageDeleteContact = () => {\n  success({\n    text: 'Contact successfully removed!',\n    width: '370px',\n  });\n};\n\nexport const showMessageWelcomeUser = () => {\n  success({\n    text: 'Welcome to the phonebook!',\n    width: '370px',\n  });\n};\n\nexport const showMessageRegisterUser = () => {\n  success({\n    text: 'You are successfully registered! To enter the phonebook, please sign in.',\n    width: '370px',\n  });\n};\n\nexport const showMessageErrorRegisterUser = () => {\n  error({\n    text: 'This user already exists!',\n    width: '370px',\n  });\n};\n\nexport const showMessageErrorLoginUser = () => {\n  error({\n    text: 'Incorrect email or password!',\n    width: '370px',\n  });\n};\n","import PropTypes from 'prop-types';\n\nconst Section = ({ children }) => {\n  return <section>{children}</section>;\n};\n\nSection.propTypes = {\n  children: PropTypes.node,\n};\n\nexport default Section;\n","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"ContactListItem_item__UAAix\",\"itemName\":\"ContactListItem_itemName__J6Aq+\",\"itemNumber\":\"ContactListItem_itemNumber__2jtdq ContactListItem_itemName__J6Aq+\",\"titleName\":\"ContactListItem_titleName__nU89I ContactListItem_itemName__J6Aq+\",\"titleNumber\":\"ContactListItem_titleNumber__-+Vht ContactListItem_itemName__J6Aq+\",\"contactsListItemButtonBox\":\"ContactListItem_contactsListItemButtonBox__lcVD6\",\"button\":\"ContactListItem_button__SG6H2\",\"buttonEdit\":\"ContactListItem_buttonEdit__aD2No ContactListItem_button__SG6H2\",\"textButton\":\"ContactListItem_textButton__giSzf\"};","import PropTypes from 'prop-types';\nimport { useNavigate } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { useDeleteContactMutation } from 'redux/contacts/contactsSlice';\nimport { updateContact } from 'redux/contacts/updateContactReducer';\nimport { showMessageDeleteContact } from 'components/Notification/Notification';\nimport LoaderButton from 'components/LoaderButton';\nimport s from './ContactListItem.module.css';\n\nconst ContactsListItem = ({ name, number, id }) => {\n  let navigate = useNavigate();\n\n  const [deleteContact, { isLoading: isDeleting }] = useDeleteContactMutation();\n  const dispatch = useDispatch();\n\n  return (\n    <li className={s.item} key={name}>\n      <div>\n        <p className={s.titleName}> Name:</p>\n        <p className={s.titleNumber}>Number:</p>\n      </div>\n      <div>\n        <p className={s.itemName}> {name}</p>\n        <p className={s.itemNumber}>{number}</p>\n      </div>\n\n      <div className={s.contactsListItemButtonBox}>\n        <button\n          className={s.button}\n          type=\"button\"\n          onClick={() => {\n            deleteContact(id);\n            showMessageDeleteContact();\n          }}\n          disabled={isDeleting}\n        >\n          <span className={s.textButton}>Delete</span>\n          {isDeleting && <LoaderButton />}\n        </button>\n        <button\n          className={s.buttonEdit}\n          type=\"button\"\n          onClick={() => {\n            dispatch(updateContact(id));\n            navigate('/contacts-update');\n          }}\n        >\n          <span className={s.textButton}>Edit</span>\n        </button>\n      </div>\n    </li>\n  );\n};\n\nContactsListItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};\n\nexport default ContactsListItem;\n","// extracted by mini-css-extract-plugin\nexport default {\"label\":\"Filter_label__vEd1E\",\"input\":\"Filter_input__N7T3z\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './Filter.module.css';\n\nexport default function Filter({ onChange, filter }) {\n  return (\n    <label className={s.label}>\n      Find contacts by name\n      <input\n        className={s.input}\n        type=\"text\"\n        value={filter}\n        placeholder=\"Find contacts by name\"\n        onChange={onChange}\n      />\n    </label>\n  );\n}\n\nFilter.propTypes = {\n  onChange: PropTypes.func.isRequired,\n  filter: PropTypes.string.isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"contactsListBox\":\"ContactList_contactsListBox__RlsXq\",\"title\":\"ContactList_title__gpugJ\",\"contactsBox\":\"ContactList_contactsBox__H9Ugp\",\"error\":\"ContactList_error__uCB2f\"};","import { useState } from 'react';\nimport { useFetchContactsQuery } from 'redux/contacts/contactsSlice';\nimport Loader from 'components/Loader';\nimport ContactListItem from 'components/ContactListItem';\nimport Filter from 'components/Filter';\nimport s from './ContactList.module.css';\n\nconst ContactList = () => {\n  const [filter, setFilter] = useState('');\n\n  const { data, isFetching } = useFetchContactsQuery();\n\n  const onChange = event => {\n    const { value } = event.currentTarget;\n\n    setFilter(value);\n  };\n\n  const getVisibleContacts = () => {\n    const optimizedFilter = filter.toLowerCase();\n\n    return data?.filter(contact =>\n      contact.name.toLowerCase().includes(optimizedFilter)\n    );\n  };\n  const contacts = getVisibleContacts();\n  const showNotFoundContacts = contacts?.length === 0;\n\n  return (\n    <>\n      <div className={s.contactsListBox}>\n        <h2 className={s.title}>Contacts</h2>\n\n        <Filter onChange={onChange} filter={filter} />\n\n        <ul className={s.contactsBox}>\n          {isFetching && <Loader />}\n          {showNotFoundContacts && (\n            <h1 className={s.error}>Contacts not found!</h1>\n          )}\n          {contacts &&\n            contacts.map(contact => (\n              <ContactListItem key={contact.id} {...contact} />\n            ))}\n        </ul>\n      </div>\n    </>\n  );\n};\n\nexport default ContactList;\n","// extracted by mini-css-extract-plugin\nexport default {\"contactsBox\":\"ContactsPage_contactsBox__fFIei\"};","import Section from 'components/Section';\nimport ContactForm from 'components/ContactForm';\nimport ContactList from 'components/ContactList';\nimport s from './ContactsPage.module.css';\n\nconst ContactsPage = () => {\n  return (\n    <div className={s.contactsBox}>\n      <Section>\n        <ContactForm />\n      </Section>\n      <Section>\n        <ContactList />\n      </Section>\n    </div>\n  );\n};\nexport default ContactsPage;\n"],"names":["validationSchema","Yup","name","min","max","required","number","ContactForm","id","navigate","useNavigate","data","useFetchContactsQuery","useAddContactMutation","addContact","addedUser","isAdding","isLoading","useUpdateContactMutation","updateContact","originalArgs","nameInputId","nanoid","numberInputId","useEffect","showMessageAddContact","showMessageUpdateContact","className","s","initialValues","onSubmit","values","resetForm","update","undefined","checkName","toLowerCase","find","contact","checkContactName","showMessageSameContactName","checkNumber","checkContactNumber","showMessageSameContactPhone","htmlFor","type","placeholder","disabled","LoaderButton","strokeColor","width","height","notice","text","success","showMessageDeleteContact","showMessageWelcomeUser","showMessageRegisterUser","showMessageErrorRegisterUser","error","showMessageErrorLoginUser","children","useDeleteContactMutation","deleteContact","isDeleting","dispatch","useDispatch","onClick","Filter","onChange","filter","value","useState","setFilter","isFetching","contacts","optimizedFilter","includes","getVisibleContacts","showNotFoundContacts","length","event","currentTarget","Loader","map","ContactListItem","Section"],"sourceRoot":""}